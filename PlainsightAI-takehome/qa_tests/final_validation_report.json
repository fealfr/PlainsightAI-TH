{
  "timestamp": "2025-06-30T11:24:59.720385",
  "qa_root": "C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests",
  "validations": {
    "test_collection": {
      "passed": true,
      "details": {
        "unit": 65,
        "integration": 18,
        "end_to_end": 21,
        "performance": 14,
        "regression": 128,
        "bug_discovery": 128
      }
    },
    "allure_integration": {
      "passed": true,
      "details": {
        "regression": {
          "command_success": true,
          "result_files": 25,
          "has_results": true
        },
        "unit": {
          "command_success": false,
          "result_files": 158,
          "has_results": true
        },
        "integration": {
          "command_success": false,
          "result_files": 197,
          "has_results": true
        }
      }
    },
    "regression_suite": {
      "passed": true,
      "details": {
        "execution_success": true,
        "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.6, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nhypothesis profile 'default'\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nmetadata: {'Python': '3.12.6', 'Platform': 'Windows-11-10.0.26100-SP0', 'Packages': {'pytest': '8.3.4', 'pluggy': '1.5.0'}, 'Plugins': {'allure-pytest': '2.13.5', 'anyio': '4.9.0', 'Faker': '33.1.0', 'hypothesis': '6.135.10', 'asyncio': '1.0.0', 'base-url': '2.1.0', 'benchmark': '5.1.0', 'cov': '6.0.0', 'emoji': '0.2.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'progress': '1.3.0', 'rerunfailures': '15.0', 'selenium': '4.1.0', 'timeout': '2.4.0', 'variables': '3.1.0', 'xdist': '3.6.1', 'html': '4.1.1'}, 'JAVA_HOME': 'C:/Program Files/Java/jdk-23.0.1', 'Base URL': '', 'Driver': None, 'Capabilities': {}}\nsensitiveurl: .*\nrootdir: C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\nconfigfile: pytest.ini\nplugins: allure-pytest-2.13.5, anyio-4.9.0, Faker-33.1.0, hypothesis-6.135.10, asyncio-1.0.0, base-url-2.1.0, benchmark-5.1.0, cov-6.0.0, emoji-0.2.0, metadata-3.1.1, mock-3.14.1, progress-1.3.0, rerunfailures-15.0, selenium-4.1.0, timeout-2.4.0, variables-3.1.0, xdist-3.6.1, html-4.1.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 128 items / 118 deselected / 10 selected\n\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_legacy_video_format_support PASSED [ 10%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_api_backward_compatibility PASSED [ 20%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_configuration_format_compatibility PASSED [ 30%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_database_schema_compatibility PASSED [ 40%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_output_format_consistency PASSED [ 50%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_performance_baseline_maintained PASSED [ 60%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_error_handling_consistency PASSED [ 70%]\ntest_regression_comprehensive.py::TestVideoProcessingRegression::test_known_bug_fixes_remain_fixed PASSED [ 80%]\ntest_simple_regression.py::test_simple_regression PASSED                 [ 90%]\ntest_simple_regression.py::TestSimpleRegression::test_simple_method PASSED [100%]\n\n============================== warnings summary ===============================\nend_to_end\\test_user_scenarios.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_user_scenarios.py:14\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_user_scenarios.py:148\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:148: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_user_scenarios.py:171\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:171: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_pipeline_e2e.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_video_pipeline_e2e.py:20\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:20: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_video_pipeline_e2e.py:138\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:138: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nend_to_end\\test_video_pipeline_e2e.py:168\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:168: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_pipeline_e2e.py:264\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:264: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_video_workflows.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_video_workflows.py:67\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:67: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:88\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:89\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:89: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nintegration\\test_filter_communication.py:20\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:20: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\nintegration\\test_filter_communication.py:21\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:21: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_integration\n\nintegration\\test_filter_communication.py:125\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:125: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_filter_communication.py:183\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:183: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_pipeline_integration.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\nintegration\\test_pipeline_integration.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_integration\n\nintegration\\test_pipeline_integration.py:63\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_pipeline_integration.py:82\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:82: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_performance_benchmarks.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\nperformance\\test_performance_benchmarks.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_performance\n\nperformance\\test_performance_benchmarks.py:78\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:78: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nperformance\\test_performance_benchmarks.py:200\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:200: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_performance_benchmarks.py:290\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:290: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nperformance\\test_video_performance.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\nperformance\\test_video_performance.py:14\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_performance\n\nperformance\\test_video_performance.py:66\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:66: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_video_performance.py:110\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:110: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_video_performance.py:111\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:111: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\ntest_regression_comprehensive.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\ntest_regression_comprehensive.py:24\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:42\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:65\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:93\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:93: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:117\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:117: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:150\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:150: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:183\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:183: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:219\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:219: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:220\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:220: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\ntest_simple_regression.py:6\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_simple_regression.py:6: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_simple_regression.py:11\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_simple_regression.py:11: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\nunit\\test_additional_units.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:101\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:101: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_additional_units.py:121\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:121: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:122\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:122: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:199\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:199: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_additional_units.py:218\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:218: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:219\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:219: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:279\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:279: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_clean.py:17\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_filter_clean.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_filter_clean.py:59\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:59: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_clean.py:84\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:84: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_unit.py:17\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_filter_unit.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_filter_unit.py:82\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:82: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_unit.py:125\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:125: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_frame_unit.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_frame_unit.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_frame_unit.py:103\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:103: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_frame_unit.py:133\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:133: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_s3_functions.py:11\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:11: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_s3_functions.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_s3_functions.py:43\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_s3_functions.py:57\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:57: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_video_processing.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_video_processing.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_video_processing.py:45\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_video_processing.py:59\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:59: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=============== 10 passed, 118 deselected, 74 warnings in 0.70s ===============\n",
        "stderr": "C:\\Users\\freit\\AppData\\Roaming\\Python\\Python312\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
        "passed_count": 10,
        "failed_count": 0,
        "passed_tests": [
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_legacy_video_format_support PASSED [ 10%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_api_backward_compatibility PASSED [ 20%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_configuration_format_compatibility PASSED [ 30%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_database_schema_compatibility PASSED [ 40%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_output_format_consistency PASSED [ 50%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_performance_baseline_maintained PASSED [ 60%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_error_handling_consistency PASSED [ 70%]",
          "test_regression_comprehensive.py::TestVideoProcessingRegression::test_known_bug_fixes_remain_fixed PASSED [ 80%]",
          "test_simple_regression.py::test_simple_regression PASSED                 [ 90%]",
          "test_simple_regression.py::TestSimpleRegression::test_simple_method PASSED [100%]"
        ],
        "failed_tests": []
      }
    },
    "bug_discovery": {
      "passed": true,
      "details": {
        "execution_success": false,
        "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.6, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nhypothesis profile 'default'\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nmetadata: {'Python': '3.12.6', 'Platform': 'Windows-11-10.0.26100-SP0', 'Packages': {'pytest': '8.3.4', 'pluggy': '1.5.0'}, 'Plugins': {'allure-pytest': '2.13.5', 'anyio': '4.9.0', 'Faker': '33.1.0', 'hypothesis': '6.135.10', 'asyncio': '1.0.0', 'base-url': '2.1.0', 'benchmark': '5.1.0', 'cov': '6.0.0', 'emoji': '0.2.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'progress': '1.3.0', 'rerunfailures': '15.0', 'selenium': '4.1.0', 'timeout': '2.4.0', 'variables': '3.1.0', 'xdist': '3.6.1', 'html': '4.1.1'}, 'JAVA_HOME': 'C:/Program Files/Java/jdk-23.0.1', 'Base URL': '', 'Driver': None, 'Capabilities': {}}\nsensitiveurl: .*\nrootdir: C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\nconfigfile: pytest.ini\nplugins: allure-pytest-2.13.5, anyio-4.9.0, Faker-33.1.0, hypothesis-6.135.10, asyncio-1.0.0, base-url-2.1.0, benchmark-5.1.0, cov-6.0.0, emoji-0.2.0, metadata-3.1.1, mock-3.14.1, progress-1.3.0, rerunfailures-15.0, selenium-4.1.0, timeout-2.4.0, variables-3.1.0, xdist-3.6.1, html-4.1.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 128 items / 101 deselected / 27 selected\n\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_workflow_error_recovery_bug FAILED [  3%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_concurrent_user_sessions_bug FAILED [  7%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_failure_recovery PASSED [ 11%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_memory_leak_detection FAILED [ 14%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_workflow_corrupted_file_bug PASSED [ 18%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_large_file_workflow_bug PASSED [ 22%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_communication_timeout PASSED [ 25%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_communication_deadlock PASSED [ 29%]\nintegration/test_pipeline_integration.py::TestPipelineIntegration::test_pipeline_timeout_bug PASSED [ 33%]\nintegration/test_pipeline_integration.py::TestPipelineIntegration::test_concurrent_processing_bug FAILED [ 37%]\nperformance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_performance_degradation_detection FAILED [ 40%]\n\n================================== FAILURES ===================================\n_________ TestCompleteUserScenarios.test_workflow_error_recovery_bug __________\n\nself = <qa_tests.end_to_end.test_user_scenarios.TestCompleteUserScenarios object at 0x000002E9696815E0>\n\n    @allure.title(\"Test workflow error recovery - Bug Discovery\")\n    @allure.description(\"Bug discovery: workflows don't recover from errors properly\")\n    @pytest.mark.bug_discovery\n    def test_workflow_error_recovery_bug(self):\n        \"\"\"Test that discovers workflow error recovery bug.\"\"\"\n        # Create workflow that will encounter errors\n        error_prone_config = {\n            \"steps\": [\n                {\"action\": \"load_video\", \"path\": \"/nonexistent/video.mp4\"},\n                {\"action\": \"process\", \"filters\": [\"invalid_filter\"]},\n                {\"action\": \"save\", \"path\": \"/readonly/output.mp4\"}\n            ],\n            \"error_handling\": \"continue_on_error\"\n        }\n    \n        workflow_result = self._create_error_prone_workflow(error_prone_config)\n        execution_result = self._execute_workflow(workflow_result[\"workflow_id\"])\n    \n        # Bug: workflow should continue despite errors but stops completely\n        final_status = self._wait_for_completion(workflow_result[\"workflow_id\"], timeout=10)\n>       assert final_status[\"status\"] == \"partially_completed\"  # Should continue despite errors\nE       AssertionError: assert 'completed' == 'partially_completed'\nE         \nE         - partially_completed\nE         + completed\n\nend_to_end\\test_user_scenarios.py:166: AssertionError\n_________ TestCompleteUserScenarios.test_concurrent_user_sessions_bug _________\n\nself = <qa_tests.end_to_end.test_user_scenarios.TestCompleteUserScenarios object at 0x000002E969681820>\n\n    @allure.title(\"Test concurrent user sessions - Bug Discovery\")\n    @allure.description(\"Bug discovery: concurrent user sessions cause data conflicts\")\n    @pytest.mark.bug_discovery\n    def test_concurrent_user_sessions_bug(self):\n        \"\"\"Test that discovers concurrent user session bug.\"\"\"\n        project_id = self._create_shared_project()\n    \n        # Simulate concurrent edits from multiple users\n        import threading\n        import time\n    \n        results = []\n    \n        def user_edit_session(user_id, edit_data):\n            # Each user makes the same type of edit simultaneously\n            result = self._make_concurrent_edit(project_id, user_id, edit_data)\n            results.append(result)\n    \n        # Start concurrent sessions\n        threads = []\n        for i in range(3):\n            edit_data = {\"timestamp\": 5.0, \"action\": \"add_text\", \"text\": f\"User {i} text\"}\n            t = threading.Thread(target=user_edit_session, args=(f\"user_{i}\", edit_data))\n            threads.append(t)\n            t.start()\n    \n        # Wait for all sessions\n        for t in threads:\n            t.join()\n    \n        # Bug: concurrent edits should be merged or queued, not lost\n        successful_edits = [r for r in results if r.get(\"success\")]\n        assert len(successful_edits) == 3  # All edits should succeed\n    \n        # Verify final project state\n        final_state = self._get_project_state(project_id)\n>       assert len(final_state[\"text_elements\"]) == 3  # Should have all text elements\nE       AssertionError: assert 2 == 3\nE        +  where 2 = len([{'text': 'User 0 text'}, {'text': 'User 1 text'}])\n\nend_to_end\\test_user_scenarios.py:205: AssertionError\n__________ TestVideoPipelineE2E.test_pipeline_memory_leak_detection ___________\n\nself = <qa_tests.end_to_end.test_video_pipeline_e2e.TestVideoPipelineE2E object at 0x000002E969683650>\n\n    @pytest.mark.bug_discovery\n    def test_pipeline_memory_leak_detection(self):\n        \"\"\"Test pipeline for memory leaks during processing.\"\"\"\n        import gc\n    \n        # Mock memory-intensive components\n        memory_processor = Mock()\n        memory_monitor = Mock()\n    \n        # Setup memory monitoring\n        initial_objects = len(gc.get_objects())\n        memory_monitor.get_memory_usage = Mock(side_effect=[100, 200, 150, 100])\n    \n        # Simulate processing with potential memory leaks\n        for i in range(3):\n            memory_processor.process_large_video(f\"video_{i}.mp4\")\n            current_memory = memory_monitor.get_memory_usage()\n    \n            # Force garbage collection\n            gc.collect()\n    \n        final_objects = len(gc.get_objects())\n    \n        # Memory usage should not grow excessively\n>       assert memory_monitor.get_memory_usage.call_count == 4\nE       AssertionError: assert 3 == 4\nE        +  where 3 = <Mock name='mock.get_memory_usage' id='3200024872432'>.call_count\nE        +    where <Mock name='mock.get_memory_usage' id='3200024872432'> = <Mock id='3200024872240'>.get_memory_usage\n\nend_to_end\\test_video_pipeline_e2e.py:288: AssertionError\n___________ TestPipelineIntegration.test_concurrent_processing_bug ____________\n\nself = <qa_tests.integration.test_pipeline_integration.TestPipelineIntegration object at 0x000002E9696B8AD0>\n\n    @allure.title(\"Test concurrent processing - Race Condition Bug\")\n    @allure.description(\"Bug discovery: race condition in concurrent processing\")\n    @pytest.mark.bug_discovery\n    def test_concurrent_processing_bug(self):\n        \"\"\"Test that discovers race condition bug.\"\"\"\n        import threading\n        results = []\n    \n        def process_video(video_id):\n            # Bug: shared resource without locking\n            global_counter = getattr(self, '_counter', 0)\n            global_counter += 1\n            time.sleep(0.1)  # Simulate processing\n            results.append(global_counter)\n            self._counter = global_counter\n    \n        # Run concurrent processes\n        threads = []\n        for i in range(5):\n            t = threading.Thread(target=process_video, args=(i,))\n            threads.append(t)\n            t.start()\n    \n        for t in threads:\n            t.join()\n    \n        # Bug: race condition causes incorrect counting\n>       assert len(set(results)) == len(results), \"Race condition detected\"\nE       AssertionError: Race condition detected\nE       assert 1 == 5\nE        +  where 1 = len({1})\nE        +    where {1} = set([1, 1, 1, 1, 1])\nE        +  and   5 = len([1, 1, 1, 1, 1])\n\nintegration\\test_pipeline_integration.py:107: AssertionError\n______ TestPerformanceBenchmarks.test_performance_degradation_detection _______\n\nself = <qa_tests.performance.test_performance_benchmarks.TestPerformanceBenchmarks object at 0x000002E9696FDE20>\n\n    @pytest.mark.bug_discovery\n    def test_performance_degradation_detection(self):\n        \"\"\"Test detection of performance degradation over time.\"\"\"\n        processor = Mock()\n    \n        # Setup performance degradation test\n        processing_times = []\n        expected_base_time = 0.1\n    \n        processor.process_with_degradation = Mock(side_effect=[\n            expected_base_time,\n            expected_base_time * 1.1,\n            expected_base_time * 1.2,\n            expected_base_time * 1.5,  # Degradation\n            expected_base_time * 2.0   # Significant degradation\n        ])\n    \n        # Measure processing times\n        for i in range(5):\n            start_time = time.time()\n            processor.process_with_degradation()\n>           measured_time = processor.process_with_degradation.side_effect[i]\nE           TypeError: 'list_iterator' object is not subscriptable\n\nperformance\\test_performance_benchmarks.py:221: TypeError\n============================== warnings summary ===============================\nend_to_end\\test_user_scenarios.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_user_scenarios.py:14\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_user_scenarios.py:148\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:148: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_user_scenarios.py:171\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_user_scenarios.py:171: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_pipeline_e2e.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_video_pipeline_e2e.py:20\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:20: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_video_pipeline_e2e.py:138\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:138: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nend_to_end\\test_video_pipeline_e2e.py:168\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:168: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_pipeline_e2e.py:264\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_pipeline_e2e.py:264: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.functional\n\nend_to_end\\test_video_workflows.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\nend_to_end\\test_video_workflows.py:67\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:67: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:88\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nend_to_end\\test_video_workflows.py:89\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\end_to_end\\test_video_workflows.py:89: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nintegration\\test_filter_communication.py:20\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:20: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\nintegration\\test_filter_communication.py:21\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:21: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_integration\n\nintegration\\test_filter_communication.py:125\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:125: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_filter_communication.py:183\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_filter_communication.py:183: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_pipeline_integration.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.integration\n\nintegration\\test_pipeline_integration.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_integration\n\nintegration\\test_pipeline_integration.py:63\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nintegration\\test_pipeline_integration.py:82\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\integration\\test_pipeline_integration.py:82: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_performance_benchmarks.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\nperformance\\test_performance_benchmarks.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_performance\n\nperformance\\test_performance_benchmarks.py:78\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:78: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nperformance\\test_performance_benchmarks.py:200\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:200: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_performance_benchmarks.py:290\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_performance_benchmarks.py:290: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nperformance\\test_video_performance.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\nperformance\\test_video_performance.py:14\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_performance\n\nperformance\\test_video_performance.py:66\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:66: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_video_performance.py:110\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:110: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nperformance\\test_video_performance.py:111\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\performance\\test_video_performance.py:111: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\ntest_regression_comprehensive.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_functional - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_functional\n\ntest_regression_comprehensive.py:24\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:42\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:65\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:93\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:93: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:117\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:117: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:150\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:150: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:183\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:183: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:219\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:219: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_regression_comprehensive.py:220\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_regression_comprehensive.py:220: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\ntest_simple_regression.py:6\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_simple_regression.py:6: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\ntest_simple_regression.py:11\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\test_simple_regression.py:11: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\nunit\\test_additional_units.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:101\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:101: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_additional_units.py:121\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:121: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:122\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:122: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:199\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:199: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_additional_units.py:218\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:218: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_additional_units.py:219\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:219: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_additional_units.py:279\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_additional_units.py:279: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_clean.py:17\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_filter_clean.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_filter_clean.py:59\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:59: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_clean.py:84\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_clean.py:84: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_unit.py:17\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:17: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_filter_unit.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_filter_unit.py:82\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:82: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_filter_unit.py:125\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_filter_unit.py:125: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_frame_unit.py:18\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:18: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_frame_unit.py:19\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:19: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_frame_unit.py:103\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:103: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_frame_unit.py:133\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_frame_unit.py:133: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_s3_functions.py:11\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:11: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_s3_functions.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_s3_functions.py:43\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_s3_functions.py:57\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_s3_functions.py:57: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_video_processing.py:12\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:12: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.unit\n\nunit\\test_video_processing.py:13\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.pyramid_unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.pyramid_unit\n\nunit\\test_video_processing.py:45\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\nunit\\test_video_processing.py:59\n  C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\\unit\\test_video_processing.py:59: PytestUnknownMarkWarning: Unknown pytest.mark.bug_discovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.bug_discovery\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED end_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_workflow_error_recovery_bug\nFAILED end_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_concurrent_user_sessions_bug\nFAILED end_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_memory_leak_detection\nFAILED integration/test_pipeline_integration.py::TestPipelineIntegration::test_concurrent_processing_bug\nFAILED performance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_performance_degradation_detection\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 5 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n========== 5 failed, 6 passed, 101 deselected, 74 warnings in 2.39s ===========\n",
        "stderr": "C:\\Users\\freit\\AppData\\Roaming\\Python\\Python312\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
        "tests_found": true
      }
    },
    "complete_pipeline": {
      "passed": true,
      "details": {
        "execution_success": false,
        "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.6, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nhypothesis profile 'default'\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nmetadata: {'Python': '3.12.6', 'Platform': 'Windows-11-10.0.26100-SP0', 'Packages': {'pytest': '8.3.4', 'pluggy': '1.5.0'}, 'Plugins': {'allure-pytest': '2.13.5', 'anyio': '4.9.0', 'Faker': '33.1.0', 'hypothesis': '6.135.10', 'asyncio': '1.0.0', 'base-url': '2.1.0', 'benchmark': '5.1.0', 'cov': '6.0.0', 'emoji': '0.2.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'progress': '1.3.0', 'rerunfailures': '15.0', 'selenium': '4.1.0', 'timeout': '2.4.0', 'variables': '3.1.0', 'xdist': '3.6.1', 'html': '4.1.1'}, 'JAVA_HOME': 'C:/Program Files/Java/jdk-23.0.1', 'Base URL': '', 'Driver': None, 'Capabilities': {}}\nsensitiveurl: .*\nrootdir: C:\\Workspace-local\\PlainsightAI-takehome\\qa_tests\nconfigfile: pytest.ini\nplugins: allure-pytest-2.13.5, anyio-4.9.0, Faker-33.1.0, hypothesis-6.135.10, asyncio-1.0.0, base-url-2.1.0, benchmark-5.1.0, cov-6.0.0, emoji-0.2.0, metadata-3.1.1, mock-3.14.1, progress-1.3.0, rerunfailures-15.0, selenium-4.1.0, timeout-2.4.0, variables-3.1.0, xdist-3.6.1, html-4.1.1\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 128 items\n\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_video_upload_processing_workflow PASSED [  0%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_live_streaming_setup_workflow PASSED [  1%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_multi_user_collaboration_workflow PASSED [  2%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_automated_workflow_scheduling PASSED [  3%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_workflow_error_recovery_bug FAILED [  3%]\nend_to_end/test_user_scenarios.py::TestCompleteUserScenarios::test_concurrent_user_sessions_bug FAILED [  4%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_video_upload_to_processing_pipeline PASSED [  5%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_live_streaming_pipeline PASSED [  6%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_batch_video_processing_pipeline PASSED [  7%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_video_analytics_pipeline PASSED [  7%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_video_transcoding_pipeline PASSED [  8%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_failure_recovery PASSED [  9%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_video_security_pipeline PASSED [ 10%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_video_metadata_extraction_pipeline PASSED [ 10%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_memory_leak_detection FAILED [ 11%]\nend_to_end/test_video_pipeline_e2e.py::TestVideoPipelineE2E::test_pipeline_monitoring_and_alerting PASSED [ 12%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_complete_video_workflow PASSED [ 13%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_license_plate_workflow FAILED [ 14%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_workflow_corrupted_file_bug PASSED [ 14%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_large_file_workflow_bug PASSED [ 15%]\nend_to_end/test_video_workflows.py::TestVideoWorkflows::test_realtime_workflow PASSED [ 16%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_message_passing PASSED [ 17%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_event_system PASSED [ 17%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_pipeline_communication PASSED [ 18%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_async_communication PASSED [ 19%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_broadcast_communication PASSED [ 20%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_communication_timeout PASSED [ 21%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_queue_communication PASSED [ 21%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_pub_sub_communication PASSED [ 22%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_communication_deadlock PASSED [ 23%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_filter_message_serialization PASSED [ 24%]\nintegration/test_filter_communication.py::TestFilterCommunication::test_f",
        "stderr": "C:\\Users\\freit\\AppData\\Roaming\\Python\\Python312\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
        "summary": "================= 10 failed, 72 passed, 74 warnings in 13.19s ================="
      }
    }
  },
  "overall_success": true
}